Dans ce fichier `reponses1.txt`, 


[Question 1.1] Indiquer 
- comment obtenir le ou les exécutables par compilation séparée.

    c99 -Wextra -pedantic -c *.c
    c99 -Wextra -pedantic *.o -o programme

- les dépendances entre les fichiers qui constituent l’application.

    makedepend *.c -Y
    
    grep '^#include "(.*)"' | sed s/#include// | sed s/\"//g | sort -u

- le rôle de la règle `.PHONY` dans Makefile.

    liste les dépendances qui doivent être re-générées même lorsqu'elles sont déjà à jour.

[Question 1.5] Indiquer
- Quel est le sous-programme non-visible des autres modules et défini dans le module File.

Le sous-programme cellule, qui instancie un pointeur sur un struct `Cellule`, est défini comme _static_ et n'est pas inclus dans file.h.

- Que se passe-t-il si on enlève le mot-clé static à la compilation ?  

La compilation se termine avec succès, et aucun impact fonctionnel n'est visible.

- Quel est le risque de ne pas le mettre ?

Notre fonction est visible dans d'autre fichiers, et pourrait entrer en conflit avec la définition d'une autre fonction nommée pareil définie dans le code incluant notre module. Ce qui est assez grave puisque, n'étant pas documentée dans le .h, l'utilisateur du module n'a même pas moyen de savoir que cette fonction a été définie.

Par exemple, si l'on définit en interne une fonction utilitaire, par exemple "max", et que le code utilisant notre module en défini également une avec le même nom, la compilation échouera.
